import { ContentService } from './content.service';
import { CreateContentDto } from './dto/create-content.dto';
import { UpdateContentDto } from './dto/update-content.dto';
import { UploadFileDto } from './dto/upload-file.dto';
export declare class ContentController {
    private readonly contentService;
    constructor(contentService: ContentService);
    create(createContentDto: CreateContentDto, req: any): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }>;
    findAll(skip: number, take: number, status?: string, contentCategoryId?: string, subjectCategoryId?: string): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }[]>;
    findMyContent(req: any, skip: number, take: number, status?: string): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }[]>;
    getContentCategories(): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getSubjectCategories(): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    findOne(id: string): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }>;
    update(id: string, updateContentDto: UpdateContentDto, req: any): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }>;
    remove(id: string, req: any): Promise<{
        id: string;
        creatorId: string;
        title: string;
        description: string;
        contentCategoryId: string | null;
        subjectCategoryId: string | null;
        contentType: import(".prisma/client").$Enums.ContentType;
        author: string | null;
        publisher: string | null;
        edition: string | null;
        year: number | null;
        isbn: string | null;
        physicalDeliveryMethod: string | null;
        pickupLocation: string | null;
        deliveryAvailability: string | null;
        deliveryFee: number | null;
        contactInfo: string | null;
        deliveryNotes: string | null;
        digitalDeliveryMethod: string | null;
        accessInstructions: string | null;
        fileSizeFormat: string | null;
        supportContact: string | null;
        videoDuration: string | null;
        videoDeliveryMethod: string | null;
        worksheetGrade: string | null;
        worksheetFormat: string | null;
        assignmentGrade: string | null;
        assignmentFormat: string | null;
        assignmentLength: string | null;
        examBody: string | null;
        examYears: string | null;
        examLevel: string | null;
        pastQuestionsFormat: string | null;
        pastQuestionsPages: string | null;
        audiobookAuthor: string | null;
        audiobookNarrator: string | null;
        audiobookDuration: string | null;
        audiobookLanguage: string | null;
        audiobookFormat: string | null;
        interactiveFormat: string | null;
        interactiveLevel: string | null;
        interactiveDuration: string | null;
        interactiveLink: string | null;
        notesLevel: string | null;
        notesFormat: string | null;
        notesLength: string | null;
        digitalPrice: number | null;
        physicalPrice: number | null;
        videoPrice: number | null;
        worksheetPrice: number | null;
        assignmentPrice: number | null;
        pastQuestionsPrice: number | null;
        audiobookPrice: number | null;
        interactivePrice: number | null;
        notesPrice: number | null;
        currency: string;
        licenseType: import(".prisma/client").$Enums.LicenseType;
        visibility: import(".prisma/client").$Enums.Visibility;
        tags: import("@prisma/client/runtime/library").JsonValue | null;
        status: import(".prisma/client").$Enums.ContentStatus;
        createdAt: Date;
        updatedAt: Date;
        viewCount: number;
        downloadCount: number;
        salesCount: number;
        ratingAverage: number;
        reviewCount: number;
    }>;
    uploadFile(uploadFileDto: UploadFileDto): Promise<any>;
    getContentFiles(contentId: string): Promise<any[]>;
    deleteFile(fileId: string, req: any): Promise<any>;
    incrementViewCount(contentId: string): Promise<void>;
    incrementDownloadCount(contentId: string): Promise<void>;
    incrementSalesCount(contentId: string): Promise<void>;
}
