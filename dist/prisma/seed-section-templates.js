"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("@prisma/client");
const prisma = new client_1.PrismaClient();
async function seedSectionTemplates() {
    console.log('üå± Seeding section templates...');
    const templates = [
        {
            name: 'Alphabetical',
            description: 'A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z',
            pattern: [
                'A',
                'B',
                'C',
                'D',
                'E',
                'F',
                'G',
                'H',
                'I',
                'J',
                'K',
                'L',
                'M',
                'N',
                'O',
                'P',
                'Q',
                'R',
                'S',
                'T',
                'U',
                'V',
                'W',
                'X',
                'Y',
                'Z',
            ],
            isDefault: true,
        },
        {
            name: 'Numbers',
            description: '1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20',
            pattern: [
                '1',
                '2',
                '3',
                '4',
                '5',
                '6',
                '7',
                '8',
                '9',
                '10',
                '11',
                '12',
                '13',
                '14',
                '15',
                '16',
                '17',
                '18',
                '19',
                '20',
            ],
            isDefault: false,
        },
        {
            name: 'Colors',
            description: 'Red, Blue, Green, Yellow, Orange, Purple, Pink, Brown, Black, White, Gray, Cyan, Magenta, Lime, Indigo, Violet',
            pattern: [
                'Red',
                'Blue',
                'Green',
                'Yellow',
                'Orange',
                'Purple',
                'Pink',
                'Brown',
                'Black',
                'White',
                'Gray',
                'Cyan',
                'Magenta',
                'Lime',
                'Indigo',
                'Violet',
            ],
            isDefault: false,
        },
        {
            name: 'Animals',
            description: 'Lion, Tiger, Eagle, Dolphin, Bear, Wolf, Fox, Deer, Rabbit, Squirrel, Owl, Hawk, Falcon, Shark, Whale, Penguin',
            pattern: [
                'Lion',
                'Tiger',
                'Eagle',
                'Dolphin',
                'Bear',
                'Wolf',
                'Fox',
                'Deer',
                'Rabbit',
                'Squirrel',
                'Owl',
                'Hawk',
                'Falcon',
                'Shark',
                'Whale',
                'Penguin',
            ],
            isDefault: false,
        },
        {
            name: 'Gems',
            description: 'Diamond, Ruby, Emerald, Sapphire, Pearl, Amethyst, Topaz, Opal, Jade, Garnet, Aquamarine, Citrine, Peridot, Tanzanite, Zircon, Tourmaline',
            pattern: [
                'Diamond',
                'Ruby',
                'Emerald',
                'Sapphire',
                'Pearl',
                'Amethyst',
                'Topaz',
                'Opal',
                'Jade',
                'Garnet',
                'Aquamarine',
                'Citrine',
                'Peridot',
                'Tanzanite',
                'Zircon',
                'Tourmaline',
            ],
            isDefault: false,
        },
        {
            name: 'Planets',
            description: 'Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto, Moon, Sun, Star, Comet, Asteroid, Galaxy, Nebula',
            pattern: [
                'Mercury',
                'Venus',
                'Earth',
                'Mars',
                'Jupiter',
                'Saturn',
                'Uranus',
                'Neptune',
                'Pluto',
                'Moon',
                'Sun',
                'Star',
                'Comet',
                'Asteroid',
                'Galaxy',
                'Nebula',
            ],
            isDefault: false,
        },
        {
            name: 'Flowers',
            description: 'Rose, Lily, Tulip, Daisy, Orchid, Sunflower, Jasmine, Lavender, Marigold, Hibiscus, Lotus, Peony, Carnation, Chrysanthemum, Magnolia, Iris',
            pattern: [
                'Rose',
                'Lily',
                'Tulip',
                'Daisy',
                'Orchid',
                'Sunflower',
                'Jasmine',
                'Lavender',
                'Marigold',
                'Hibiscus',
                'Lotus',
                'Peony',
                'Carnation',
                'Chrysanthemum',
                'Magnolia',
                'Iris',
            ],
            isDefault: false,
        },
        {
            name: 'Greek Letters',
            description: 'Alpha, Beta, Gamma, Delta, Epsilon, Zeta, Eta, Theta, Iota, Kappa, Lambda, Mu, Nu, Xi, Omicron, Pi, Rho, Sigma, Tau, Upsilon, Phi, Chi, Psi, Omega',
            pattern: [
                'Alpha',
                'Beta',
                'Gamma',
                'Delta',
                'Epsilon',
                'Zeta',
                'Eta',
                'Theta',
                'Iota',
                'Kappa',
                'Lambda',
                'Mu',
                'Nu',
                'Xi',
                'Omicron',
                'Pi',
                'Rho',
                'Sigma',
                'Tau',
                'Upsilon',
                'Phi',
                'Chi',
                'Psi',
                'Omega',
            ],
            isDefault: false,
        },
    ];
    for (const template of templates) {
        await prisma.sectionTemplate.upsert({
            where: { name: template.name },
            update: template,
            create: template,
        });
    }
    console.log('‚úÖ Section templates seeded successfully!');
}
async function main() {
    try {
        await seedSectionTemplates();
    }
    catch (error) {
        console.error('‚ùå Error seeding section templates:', error);
        process.exit(1);
    }
    finally {
        await prisma.$disconnect();
    }
}
main();
//# sourceMappingURL=seed-section-templates.js.map